.box-container {
  height: 50vh;
  border: 1px solid;
}
#box-container1 {
  display: flex;
  justify-content: center;
  align-items: center;
}
.box {
  width: 200px;
  height: 200px;
  border: 2px solid;
  background-color: rgba(21, 246, 242, 0.347);
  font-size: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;

  /* transition: 시간 변환 속성 */
  /* linear : 일정한 속도로 바뀌는 것. linear 자리에 ctrl+space 시 다른 속성 나옴 */
  transition: 0.2s linear; /* n초에 걸쳐서 일정하게 바뀜 */
}
.box:hover {
  background-color: rgba(255, 0, 208, 0.671);
  /* transform : 변형함수() */
  /* scale : 지정한 크기만큼 확대/축소하는 함수 */
  transform: scale(2);
  /* rotate : 지정한 각도만큼 회전시키는 함수 */
  transform: rotate(30deg);
  /* skew : 지정한 각도만큼 비틀어 왜곡하는 함수 */
  transform: skew(30deg);
  transform: skewY(-30deg); /* Y축으로 */

  /* translate : x, y, z축 방향으로 이동시키는 함수 */
  transform: translateX(100px); /* X축으로 100px만큼 이동 */
  transform: translate(100px, 200px); /* X축, Y축 이동 */

  transform: scale(1.5) rotate(15deg); /* 여러 개 함수 같이 사용 가능 */

  /* transform-origin : 변형의 기준점을 변경하는 속성 */
  transform-origin: left top;
}

/* animation */
#box-container2 {
  width: 1200px;
  height: 600px;
}
.animation-box {
  box-sizing: border-box;
  width: 200px;
  height: 200px;
  border: 2px solid;
  background: indigo;
  color: white;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  /* 각 속성값을 띄어쓰기로 한꺼번에 지정 가능
    animation: name duration iteration-count timing-function delay direction;
    - name : 설정된 keyframe 지정
    - duration : 실행 시간 지정
    - iteration-count : 반복 횟수 지정
    - timing-function : 속도 형태 지정
    - delay : 대기 시간 지정
    - direction : 진행 형태 지정
  */
  /* 반복 횟수 - infinite 계속 돌리기 */
  animation: boxAni 5s linear infinite reverse; /* reverse : 반대로 */
  animation: boxAni 5s linear forwards; /* forwards : 거기서 끝 */
  animation: boxAni 5s linear infinite alternate; /* alternate : 왔다 갔다 */
}
.animation-box:hover {
  background-color: aquamarine;
  animation-play-state: paused; /* 애니메이션 정지 */
}
/*
    @keyframes 애니메이션이름 {
        from { 시작 프레임 설정 }
        to { 끝 프레임 설정 }
        % { 단위로 지정 가능 }
    }
*/
@keyframes boxAni {
  0% {
    transform: translate(0, 0);
  }
  30% {
    transform: translate(1000px, 0);
  }
  50% {
    transform: translate(1000px, 400px);
  }
  70% {
    transform: translate(0, 400px);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* 3D */
#box-container3 {
  display: flex;
  justify-content: center;
  align-items: center;
}
#box-container3:hover .card {
  transform: rotateY(180deg);
}
.card {
  width: 200px;
  height: 200px;
  position: relative;
  transform: rotateY(0deg);
  transition: 3s;
  transform-style: preserve-3d;
}
.card-item {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.card-item-front {
  background-image: url("../../resources/panda.jpg");
  background-size: cover;
  background-position: center;
  z-index: 1; /* 사진이 위로 올라오게 */
  backface-visibility: hidden; /* 뒷면에 보이는 이미지 숨기기 */
}
.card-item-back {
  background-color: darkgreen;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: 2rem;
  color: white;
  transform: rotateY(-180deg); /* 뒤집어진 뒷면 다시 원 위치 시키기 */
}
